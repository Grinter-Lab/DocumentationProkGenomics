[{"path":"index.html","id":"start-here","chapter":"1 START HERE","heading":"1 START HERE","text":"","code":""},{"path":"introduction.html","id":"introduction","chapter":"2 Introduction","heading":"2 Introduction","text":"nextflow pipeline allows run several programs using one-line command. wraps programs assemble, annotate, taxonomically identify, genotypic characterize perform simple comparative genomics prokaryotic sequencing data. pipeline self-contained meant run modules (independent parts ). intention simplifying user interaction user knowledge bioinformatics behind processes. However, making familiar programs behind scenes helps make informed decisions. Please go resources read program .","code":""},{"path":"introduction.html","id":"overview-of-the-pipeline","chapter":"2 Introduction","heading":"2.1 Overview of the pipeline","text":"Quality control reads (short, long, )Cleaning readsDe-novo Assembly (short, long hybrid)Quality Control assembly detection contaminationIdentification species sampleIdentification plasmids, phages prophagesGenes AnnotationComparative genomics (genome reference provided)\nCoverage reference genome\nIdentification core genome\nIdentification Single Nucleotide Variants (SNV)\nIdentification rearrangements larger deletions\nCoverage reference genomeIdentification core genomeIdentification Single Nucleotide Variants (SNV)Identification rearrangements larger deletionsCharacterization genes interest (genes sequences provided)","code":""},{"path":"getting-started.html","id":"getting-started","chapter":"3 Getting Started","heading":"3 Getting Started","text":"","code":""},{"path":"getting-started.html","id":"make-sure-you-have-nextflow-running","chapter":"3 Getting Started","heading":"3.1 Make sure you have Nextflow running","text":"get started pipeline, make sure installed nextflow.using cluster high chances nextflow module already installed. Please call module. Type following command use tab word nextflow see different versions available. Ideally use recent version.can conda installed system (either computer server), create conda environment install nextflow following next commandsUse conda activate nextflow every time want use nextflowAlternatively, install nextflow using nextflow installation instructions","code":"# if you are in a cluster\nmodule add nextflow# if you can create conda env, this could work for a cluster, server or your own computer. \nconda create -n nextflow\nconda activate nextflow\nconda install -c bioconda nextflow=21.10.6\n\n"},{"path":"getting-started.html","id":"download-the-nextflow-pipeline","chapter":"3 Getting Started","heading":"3.2 Download the nextflow pipeline","text":"Run following commandIf issues consulte troubleshoot section helpA successful download repository look like :able run program location without using complete path, run following commands","code":"git clone git@github.com:Grinter-Lab/ProkGenomics.git\nCloning into 'ProkGenomics'...\nremote: Enumerating objects: 3, done.\nremote: Counting objects: 100% (3/3), done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0\nReceiving objects: 100% (3/3), done.# move to the program folder\ncd ProkGenomics/\n\npwd \n# This will print your location\n/path/to/dir/program/\n\nexport PATH=\"$PATH:/path/to/dir/program/\""},{"path":"getting-started.html","id":"set-up-your-working-directory","chapter":"3 Getting Started","heading":"3.3 Set up your working directory","text":"Create working directory projectCreate folder raw data","code":"mkdir Project1\ncd Project1\nmkdir rawdata\ncd rawdata"},{"path":"getting-started.html","id":"how-to-transfer-raw-data-to-clusterserver","chapter":"3 Getting Started","heading":"3.4 How to transfer raw data to cluster/server","text":"Open tab terminal local computer","code":"# from tab in your local computer\n# scp <location in the server, notice structue as serve:path> <location in your computer where you want the file to go>\n# notice that the wild card allows you to move all files ending in fq.gz. if your files have a different extention please modify accordently (ex. fastq.gz)\n\nscp *fq.gz <username>@<cluster_name>:/srv/home/username/folder/\n"},{"path":"run-pipeline.html","id":"run-pipeline","chapter":"4 Run Pipeline","heading":"4 Run Pipeline","text":"Remember put program $PATH haven’t done . step done every time start new terminal session. want make change permanent modify bash profile (don’t play around don’t feel confident )added program $PATH successfully able runIf starts correctly, see something likeIf don’t see version go troubleshoot look possible solutions","code":"#remember to activate the conda env if you are using one\nconda activate nextflow\n\n#run the pipeline\nnextflow run ProkGenomics\nN E X T F L O W  ~  version 21.10.6\nLaunching `main.nf` [focused_noether] - revision: eb930f0e69\n"},{"path":"run-pipeline.html","id":"simple-run","chapter":"4 Run Pipeline","heading":"4.1 Simple run","text":"Parameters can use:","code":"#remember to activate the conda env if you are using one, and if you haven't activated it yet\nconda activate nextflow\n\n#run the pipeline\nnextflow run ProkGenomics --sample_name '1-77321' -profile conda\n"},{"path":"understand-outputs-in-development.html","id":"understand-outputs-in-development","chapter":"5 Understand Outputs (in development)","heading":"5 Understand Outputs (in development)","text":"pipeline produce several different outputs. main results stored folder names main_results","code":""},{"path":"understand-outputs-in-development.html","id":"outputs","chapter":"5 Understand Outputs (in development)","heading":"5.1 OUTPUTS","text":"Folder structureFolder analysis generated.folder test_output:\nfolder contains intermedia files used program. files help check detail alignment come . case puzzle final table. folder contains:GenomeName.chr.genes.faa: predicted genes AAGenomeName.chr.genes.fasta: predicted genes ntGenomeName.chr.genes.gff: predicted genes gff format fasta file endGenomeName.chromosome.GeneName.Blast.txt: blast results gene genomeGenomeName.chromosome.GeneName.fasta.plusRef.fasta: fasta gene reference gene genomefolder test_results\nfolder contains final results files folder predicted peptides match genes interestGeneName.fasta.nt_alignment.fasta: alignment gene interest genomes analysedtest.alignments.description.txt: table descriptive information alignments, stop codons, gaps, insertions, SNPs, N.copies (numbers copies)Peptides (folder): predicted peptides match genes interestAdditional files running –Kleb, –Esch –Ent optionsfolder test_output:\nassembly two folders one chromosome one plasmid. Examples chromosome, .plasmid_ plasmidsGenomeName.chromosome_contigslist.txt:list contigs assembly chromosomalGenomeName.chromosome.fasta: fasta file chromosomal contigsGenomeName.fsa_nt.chromosomesummary.txt: summary results chromosome prediction mlplasmid","code":"1-77321_results\n├── fastqc\n│   ├── 1-77321-LFA6246_L2_1_fastqc.html\n│   ├── 1-77321-LFA6246_L2_1_fastqc.zip\n│   ├── 1-77321-LFA6246_L2_2_fastqc.html\n│   ├── 1-77321-LFA6246_L2_2_fastqc.zip\n│   ├── 1-77321-LFA6246_L2.R1.trim_fastqc.html\n│   ├── 1-77321-LFA6246_L2.R1.trim_fastqc.zip\n│   ├── 1-77321-LFA6246_L2.R1.unpaired.trim_fastqc.html\n│   ├── 1-77321-LFA6246_L2.R1.unpaired.trim_fastqc.zip\n│   ├── 1-77321-LFA6246_L2.R2.trim_fastqc.html\n│   ├── 1-77321-LFA6246_L2.R2.trim_fastqc.zip\n│   ├── 1-77321-LFA6246_L2.R2.unpaired.trim_fastqc.html\n│   ├── 1-77321-LFA6246_L2.R2.unpaired.trim_fastqc.zip\n│   └── software_details.txt\n├── trimmomatic\n│   ├── 1-77321-LFA6246_L2.R1.trim.fastq\n│   ├── 1-77321-LFA6246_L2.R1.unpaired.trim.fastq\n│   ├── 1-77321-LFA6246_L2.R2.trim.fastq\n│   ├── 1-77321-LFA6246_L2.R2.unpaired.trim.fastq\n│   └── software_details.txt\n└── unicycler\n    ├── 1-77321-LFA6246_L2\n    │   ├── 001_spades_graph_k027.gfa\n    │   ├── 001_spades_graph_k053.gfa\n    │   ├── 001_spades_graph_k071.gfa\n    │   ├── 001_spades_graph_k087.gfa\n    │   ├── 001_spades_graph_k099.gfa\n    │   ├── 001_spades_graph_k111.gfa\n    │   ├── 001_spades_graph_k119.gfa\n    │   ├── 001_spades_graph_k127.gfa\n    │   ├── 002_depth_filter.gfa\n    │   ├── 003_overlaps_removed.gfa\n    │   ├── 004_bridges_applied.gfa\n    │   ├── 005_final_clean.gfa\n    │   ├── assembly.fasta <<<<< Complete de novo assembly\n    │   ├── assembly.gfa\n    │   └── unicycler.log\n    └── software_details.txt\n├── checkm\n│   ├── 1-77321-LFA6246_L2.tsv <<<<< QC de novo assembly\n│   └── software_details.txt\n├── checkv \n│   ├── 1-77321-LFA6246_L2\n│   │   ├── complete_genomes.tsv\n│   │   ├── completeness.tsv\n│   │   ├── contamination.tsv\n│   │   ├── proviruses.fna\n│   │   ├── quality_summary.tsv <<<<< Phages or Provirus detected\n│   │   └── viruses.fna\n│   └── software_details.txt\n├── prokka\n│   ├── 1-77321-LFA6246_L2_annotation_output\n│   │   ├── 1-77321-LFA6246_L2.err\n│   │   ├── 1-77321-LFA6246_L2.faa\n│   │   ├── 1-77321-LFA6246_L2.ffn\n│   │   ├── 1-77321-LFA6246_L2.fna\n│   │   ├── 1-77321-LFA6246_L2.fsa\n│   │   ├── 1-77321-LFA6246_L2.gbk <<<<< Gene Annotation\n│   │   ├── 1-77321-LFA6246_L2.gff <<<<< Gene Annotation\n│   │   ├── 1-77321-LFA6246_L2.log\n│   │   ├── 1-77321-LFA6246_L2.sqn\n│   │   ├── 1-77321-LFA6246_L2.tbl\n│   │   ├── 1-77321-LFA6246_L2.tsv\n│   │   └── 1-77321-LFA6246_L2.txt\n│   └── software_details.txt\n├── pharokka\n│   ├── 1-77321-LFA6246_L2_annotation_output\n│   │   ├── 1-77321-LFA6246_L2.err\n│   │   ├── 1-77321-LFA6246_L2.faa\n│   │   ├── 1-77321-LFA6246_L2.ffn\n│   │   ├── 1-77321-LFA6246_L2.fna\n│   │   ├── 1-77321-LFA6246_L2.fsa\n│   │   ├── 1-77321-LFA6246_L2.gbk\n│   │   ├── 1-77321-LFA6246_L2.gff <<<<< Phages or Provirus annotation\n│   │   ├── 1-77321-LFA6246_L2.log\n│   │   ├── 1-77321-LFA6246_L2.sqn\n│   │   ├── 1-77321-LFA6246_L2.tbl\n│   │   ├── 1-77321-LFA6246_L2.tsv\n│   │   └── 1-77321-LFA6246_L2.txt\n│   └── software_details.txt\n\n  \n"},{"path":"write-methods.html","id":"write-methods","chapter":"6 Write Methods","heading":"6 Write Methods","text":"Still development","code":""},{"path":"troubleshooting.html","id":"troubleshooting","chapter":"7 Troubleshooting","heading":"7 Troubleshooting","text":"","code":""},{"path":"troubleshooting.html","id":"gitgithub.com-permission-denied","chapter":"7 Troubleshooting","heading":"7.1 git@github.com: Permission denied","text":"may see error:Note private repository, may required log using github details. Github now requires setup token key access private repositories, please follow github instructions set one","code":"Cloning into 'ProkGenomics'...\ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists."},{"path":"resources.html","id":"resources","chapter":"8 Resources","heading":"8 Resources","text":"https://www.bioinformatics.babraham.ac.uk/projects/fastqc/http://www.usadellab.org/cms/?page=trimmomatichttps://github.com/rrwick/UnicyclerOther programshttps://bactopia.github.io/v3.0.0/https://proksee.ca/https://genome.usegalaxy.org.au/","code":""},{"path":"command-line-intro.html","id":"command-line-intro","chapter":"9 Command Line Intro","heading":"9 Command Line Intro","text":"completely new working command line following short introduction useful get started. Please read carefully section, help understand instructions later sections.","code":""},{"path":"command-line-intro.html","id":"general-syntax-and-conventions","chapter":"9 Command Line Intro","heading":"9.1 General syntax and conventions:","text":"• Code command instructions directly given computer console terminal window. Code command lines tutorial written style • string written < > means type means case. example: Login : <username> means type user name space without < >example, following instructions look like:file name os myfile.txt file destination newfolder• asterisk * used means kind. example: ls *.fasta print list files extension .fasta• Every line starting # comment. lines interpreted computer, give additional information.","code":"in this boxescp <file_name> <file_destination>cp myfile.txt newfolder\n"},{"path":"command-line-intro.html","id":"programs","chapter":"9 Command Line Intro","heading":"9.1.1 Programs:","text":"Command lines executing programs usually looks like:whereprogram program question--input option parameterinputfile argument• Options/parameters program denotated dash letter :-f double dash string : --file. option required optional often explained using [ ], example: [-t 8]• Arguments input options/parameters. example -f myfile.txt. -f option input file myfile.txt argument option, name file. arguments often explained using < >. several arguments possible option pipes used show different possibilities, example [-f sam|bam]. means option -f allows sam bam formats","code":"program --input <inputfile>"},{"path":"command-line-intro.html","id":"basic-commands","chapter":"9 Command Line Intro","heading":"9.2 Basic commands:","text":"enter terminal prompt consists : HOST_NAME:MACHINE CURRENT_DIRECTORY $ everything $ command line. can use following basic commands access information perform tasks computer.• change directorycd cd ~ move home directory• print working directory• list files• make dir*ectory• copy (needs file copied destination).","code":"cd <name of directory you want to change to>pwdlsmkdir <new folder name>cp <path of file to be copy> <destination path>"},{"path":"command-line-intro.html","id":"files-system","chapter":"9 Command Line Intro","heading":"9.3 Files system","text":"• Please note directories structured hierarchical system. know standing ask computer move correct folder.Example folder structure:","code":"           | subfolder_1 \n           | \nmain_folder\n           |\n           | subfolder_2\n                        |\n                        |subfolder_2.1 (YOU ARE HERE)\n#where am I?\n\npwd\n\n#shows this path: /main_folder/subfolder_2/subfolder_2.1\n\n# I want to go to the folder conteining this folder\n\ncd ..\n\n# moves to /main_folder/subfolder_2/\n\n\n# I want to go to the folder conteining this folder and change to a folder that is there\n\n\ncd ../subfolder_1\n\n#moves to subfolder_1"},{"path":"connect-to-the-cluster.html","id":"connect-to-the-cluster","chapter":"10 Connect to the cluster","heading":"10 Connect to the cluster","text":"","code":""},{"path":"connect-to-the-cluster.html","id":"macs","chapter":"10 Connect to the cluster","heading":"10.0.1 Macs","text":"working Mac can directly open terminal applications click Launchpad icon Dock, type Terminal search field, click Terminal. see version :type following commandwhere <username> authcate <cluster_name> cluster connecting . Click enter, asked password. Enter password click enter. Note see characters typed. now home directory cluster.","code":"ssh <username>@<cluster_name>"},{"path":"connect-to-the-cluster.html","id":"windows","chapter":"10 Connect to the cluster","heading":"10.0.2 Windows","text":"windows-based PC, need download PuTTY.hostname (IP address) box, enter hostname provided, ie. <username>@<cluster_name>, <username> <username> authcate <cluster_name> cluster connecting . Ensure connection type SSH. Click open. prompted enter username (authcate) password terminal window. Enter credentials click enter. Note see characters typed. now home directory cluster.Now ready go\nLet’s get started","code":""}]
